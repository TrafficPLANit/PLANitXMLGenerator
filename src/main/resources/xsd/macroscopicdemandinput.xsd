<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:include schemaLocation="planitlibrary.xsd" />

	<!-- Complex types -->
	<xs:complexType name="unrestrictedduration">
		<xs:annotation>
			<xs:documentation>
				Duration give as a positive integer in some unit in
				unrestricted from (no limitation on choice of integer)
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:positiveInteger">
				<xs:attribute name="unit" type="durationunit" 	default="s" use="optional">
					<xs:annotation>
						<xs:documentation>
							Default duration unit is assumed to be seconds
							(s)
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- Simple types -->
	<xs:simpleType name="durationunit">
		<xs:annotation>
			<xs:documentation>
				Choice between h (hours), m (minutes), s (seconds)
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="h" />
			<xs:enumeration value="m" />
			<xs:enumeration value="s" />
		</xs:restriction>
	</xs:simpleType>

	<!-- Demand specific attributes -->
	<xs:attribute name="timeperiodref" type="xs:string">
		<xs:annotation>
			<xs:documentation>
				Reference to the time period the item relates to
			</xs:documentation>
		</xs:annotation>
	</xs:attribute>

	<xs:attribute name="userclassref" type="xs:string">
		<xs:annotation>
			<xs:documentation>
				Reference to the user class the travel demand
				related to. Can be absent if only default user class/single user
				class exists.
			</xs:documentation>
		</xs:annotation>
	</xs:attribute>

	<!-- simple elements -->
	<xs:element name="starttime" type="xs:time"
		default="00:00:00">
		<xs:annotation>
			<xs:documentation>
				Start time is given in 24-hour format like the
				following 'hh:mm:ss'
			</xs:documentation>
		</xs:annotation>
	</xs:element>

	<!-- Root element -->
	<xs:element name="macroscopicdemand">
		<xs:annotation>
			<xs:documentation>
				The macroscopic demand, i.e., in traffic flows not
				discrete vehicles, for the project at hand per mode per time period,
				per od
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="demandconfiguration" minOccurs="1">
					<xs:annotation>
						<xs:documentation>
							Configuration of the demands, specifically, user
							classes and time periods
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="oddemands" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- Configuration of the demand, i.e., the metadata -->
	<xs:element name="demandconfiguration">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="travellertypes" minOccurs="0">
					<xs:annotation>
						<xs:documentation>
							Traveller types available in this project. Note
							that when this element is absent a single 'virtual' traveller
							type is created to represent
							all travellers. If this is the case,
							no references to traveller
							types are to be made in any forthcoming
							elements as there is
							nothing to refer
							to, i.e., no ids of traveller
							types are present
							so they cannot be referred.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="userclasses" minOccurs="0">
					<xs:annotation>
						<xs:documentation>
							Userclasses define the types of travellers we
							have by combining a mode with a traveller type. In case no
							userclasses are explicitly defined, i.e.,
							the element is absent,
							then it is assumed we only have a single 'virtual' user class. In
							that case at most a single mode and/or traveller type can be
							defined
							otherwise the user class is no longer uniquely defined.
							Similarly, no references to userclasses can be made anywhere and
							instead the virtual user class is assumed
							automatically.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="timeperiods">
					<xs:annotation>
						<xs:documentation>
						</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="duration">
		<xs:annotation>
			<xs:documentation>
				Duration is a positive integer (in seconds) and we
				start counting from the start time. Note that the duration must
				always be less
				than the number of seconds in a day (86400).
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:restriction base="unrestrictedduration">
					<xs:minInclusive value="1" />
					<xs:maxInclusive value="86400" />
				</xs:restriction>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="oddemands">
		<xs:annotation>
			<xs:documentation>
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice maxOccurs="unbounded">
				<xs:element ref="odcellbycellmatrix" />
				<xs:element ref="odrowmatrix" />
				<xs:element ref="odrawmatrix" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="odmatrix">
		<xs:attribute ref="timeperiodref" use="required" />
		<xs:attribute ref="userclassref" use="optional" />
	</xs:complexType>

	<!-- full (element-by-element) or sparse matrix definition -->
	<xs:element name="odcellbycellmatrix">
		<xs:annotation>
			<xs:documentation>
				This ODmatrix allows for cell-by-cell values and
				takes up most space if each cell is provided. It is however possible
				to skip zero cells or rows resulting in a simple sparse
				format.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="odmatrix">
					<xs:sequence maxOccurs="unbounded">
						<xs:element name="o">
							<xs:annotation>
								<xs:documentation>Origin 'row'</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="d" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Destination 'column'</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:float">
													<xs:attribute name="ref" type="xs:string" use="optional">
														<xs:annotation>
															<xs:documentation>
																Reference to the destination zone id
																this cell relates to. When
																absent all destinations must
																be present in this matrix
																row in an incremental order.
															</xs:documentation>
														</xs:annotation>
													</xs:attribute>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="ref" type="xs:string" use="optional">
									<xs:annotation>
										<xs:documentation>
											Reference to the origin zone id this row
											relates to. When absent all
											origins must be present in the
											matrix in an incremental
											order.
										</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="odrawmatrix">
		<xs:annotation>
			<xs:documentation>
				CSV like string of entire matrix (including zero
				values) formatted based on os (origin separator) and ds (destination
				separator) attribute configuration
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="odmatrix">
					<xs:sequence>
						<xs:element name="values">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attribute ref="os" use="optional" />
										<xs:attribute ref="ds" use="optional" />
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="odrowmatrix">
		<xs:annotation>
			<xs:documentation>
				CSV like structure on a per row basis, allowing one
				to leave out rows with zero values
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="odmatrix">
					<xs:sequence maxOccurs="unbounded">
						<xs:element name="odrow">
							<xs:annotation>
								<xs:documentation>Single row in od-matrix</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attribute name="ref" type="xs:string" use="optional">
											<xs:annotation>
												<xs:documentation>
													Reference to origin row, gaps in reference
													indicate zero values rows
													for all destinations. In case no
													'ref' attribute is
													provided, it should be absent on all rows
													and we assume
													that all origins are provided in incremental
													order.
												</xs:documentation>
											</xs:annotation>
										</xs:attribute>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute ref="ds" use="optional" />
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="timeperiods">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="timeperiod" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="name" type="xs:string" minOccurs="0" maxOccurs="1" />
							<xs:element ref="starttime" minOccurs="0" />
							<xs:element ref="duration" />
						</xs:sequence>
						<xs:attribute name="id" type="xs:string" use="required" />
						<xs:attribute name="externalid" type="xs:string" use="optional"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="travellertypes">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="travellertype" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="name" type="xs:string" minOccurs="0" 	maxOccurs="1" />
						</xs:sequence>
						<xs:attribute name="id" type="xs:string" use="required" />
						<xs:attribute name="externalid" type="xs:string" use="optional"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
		<xs:unique name="unique-travellertype">
			<xs:selector xpath="travellertype" />
			<xs:field xpath="@id" />
		</xs:unique>
	</xs:element>

	<xs:element name="userclasses">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="userclass" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="name" type="xs:string" minOccurs="0" 	maxOccurs="1" />
						</xs:sequence>
						<xs:attribute name="id" type="xs:string" use="required" />
						<xs:attribute name="externalid" type="xs:string" use="optional"/>
						<xs:attribute name="moderef" type="xs:string" use="optional" />
						<xs:attribute name="travellertyperef" type="xs:string" use="optional" />
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

</xs:schema>